1. Создать представление, которое выводит название курса, номер последнего потока, 
дату начала обучения последнего потока и среднюю успеваемость курса по всем потокам.
CREATE VIEW task_1 AS
SELECT course.course_name, streams.stream_number,streams.date_start,AVG(academic_performance.performance) AS average_perfomanse FROM academic_performance 
    JOIN streams 
    JOIN course 
    ON academic_performance.stream_id = streams.id AND course.id =streams.course_id
    GROUP BY course.id HAVING course_id = 1 AND streams.id = MAX(streams.id);
2. Удалить из базы данных всю информацию,
которая относится к преподавателю с идентификатором, равным 3. Выполнить все необходимые действия в транзакции.

BEGIN TRANSACTION;
DELETE FROM academic_performance WHERE teacher_id = 3;
DELETE FROM teachers WHERE id = 3;
COMMIT;

3. Создать триггер для таблицы academic_performance, 
который проверяет значение успеваемости на соответствие диапазону чисел между 0.1 и 5 включительно.

CREATE TRIGGER check_range_performance BEFORE INSERT
ON academic_performance
BEGIN
  SELECT CASE 
  WHEN    
    (NEW.performance < 0.1) OR (NEW.performance > 5)
  THEN
    RAISE(ABORT, 'Wrong value for performance!')
  END;
END;

sqlite> INSERT INTO academic_performance VALUES (1, 1, 4.6);
sqlite> INSERT INTO academic_performance VALUES (1, 1, 7.6);
Error: Wrong value for performance!